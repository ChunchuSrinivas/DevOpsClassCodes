
def sendEmailNotification(plMap){
	emailext body: getEmailBody(plMap), 
	recipientProviders: [developers()],
	 subject: "DevOps ${currentBuild.fullProjectName} #${currentBuild.number} Build  Status : ${currentBuild.currentResult}", 
	 to: plMap.emailToList,
	 attachLog: true;
}

def getEmailBody(plMap){
      plMap.userInfo =	getBuildUserInfo();
            if(null!=plMap.stagesStatusMap && plMap.stagesStatusMap.size() >0 ){
            for(def stage: plMap.stagesStatusMap.keySet()){
            println "${stage} : ${plMap.stagesStatusMap.get(stage)}";
            }
            }
   def branchHTML = plMap.containsKey(plMap.repoBranchName) ? "<h4>Branch : ${plMap.repoBranchName}</h4>":"";
   def sonarURLHTML = (plMap.containsKey(plMap.codeAnalysisStageExists) && "true"==plMap.codeAnalysisStageExists)? """<a href="${env.SONAR_HOST_URL}:9000/sonar/dashboard?id=com.adp.imms:imms-${env.COMPONENT_NAME}"><h5>Code Analysis URL</h5></a>""":"" 
   def emailBody =  """
<html>
<head>
<style>
body{
    background-color:#fdfcf6 !important;
    color: #ebebeb !important;
}
table {
  width:100%;
}
table td {
    border: 0.3px solid #ebebeb;
    border-collapse: collapse;
    background-color: #897cb3;
    color: #ffffff;
    padding: 8px;
    text-align: left;
}


table th {
    border: 0.2px solid #ebebeb;
    border-collapse: collapse;
    background-color: #efdfd0;
    color: #121c4e;
    padding: 15px;
    text-align: left;
}

h1, h2, h3, h4, h5, h6{
    background-color:gray;
    color: #ffffff;
}
a:link, a:visited {
  background-color: #f44336;
  color: white;
  padding: 14px 25px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
}

a:hover, a:active {
  background-color: #3ebede;
}
</style>
</head>
<body>
<div>

<div style="float:left !important;width:50% !important">
<h3>Job Build Status : ${currentBuild.currentResult}</h3>
<h3>Triggered by : ${userInfo} </h3>
<h4>Execution time : ${currentBuild.durationString.replace("and counting","")} </h4>
${plMap.branchHTML} 
${plMap.sonarURLHTML} 
<a href="${currentBuild.absoluteUrl}"><h5>Jenkins Build URL</h5></a></div>
<div >
<table>
<tr><th>Stage</th><th>Result</th></tr>""";
    if(null!=plMap.stagesStatusMap && plMap.stagesStatusMap.size() >0 ){
      for(def stage: plMap.stagesStatusMap.keySet()){
        emailBody+= """<tr><td>${stage}</td><td>${plMap.stagesStatusMap.get(stage)}</td></tr>""";
      }
    }
emailBody+= """
</table>
</div>


</div>
</body>
</html>
""";
return emailBody;
}


def getBuildUserInfo(){
    // plMap.userInfo="";
    emailId ="";
    userId ="";
    try{
    wrap([$class: 'BuildUser']) {
        emailId = BUILD_USER_EMAIL;
        userId = BUILD_USER_ID;
        if(null==emailId || null==userId ||  emailId.trim().length()==0)
        emailId = "AutoTrigger";
        BUILD_USER_EMAIL = emailId;
    }
    }
    catch(ex){
        userInfo = "AutoTrigger";
        return userInfo;
    }
  userInfo = "${userId} - ${emailId}";
  return userInfo;
}


return this

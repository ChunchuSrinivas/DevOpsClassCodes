/***
Script  for download the DB script from repo and build the package and prepare the installation script for the deployment
Author: Shaik kalesha
Stages: CHECKOUT_STAGE: checkout the cicd code base
        BUILD_STAGE: It will run the xxmm_build.sh script to download the DB files and generates the build packege
        INSTALL_SCRIPT: It will take input from previous stage(build packages) and generate the install scripts as output 
        DEPLOY_STAGE: It will take install script generated by previous stage and deploy the script under DB instance
        EmailNotification: Notifications
***/
node("linux-mvn-docker-slave8"){
    withFolderProperties{
		   env.COMPONENT = env.COMPONENT_NAME;
    }
    def plMap = [:];
       
    try{
        deleteDir();
	    plMap.instance = "${InstanceName}"
        plMap.file = "${InputFile}"
        plMap.component = env.COMPONENT;
        println "${plMap.instance}"
        println  'Using remote command over ssh'
        stage("CHECK OUT"){
            sh "pwd";
            sh "git clone -b master --single-branch ssh://git@bitbucket.es.ad.adp.com:7999/imms/imm-cicd.git";
            sh "ls -ltr";
            println "${currentBuild.number}"
            plMap.branchName= "${BranchName}"
            println "${plMap.branchName}"
            
            sh "git clone -b ${plMap.branchName} --single-branch ssh://git@bitbucket.es.ad.adp.com:7999/imms/${plMap.component}.git"
            dir("imm-database\\deployment"){
                println "inside the imm-database repo"
		        sh "ls";
		    }
		dir("imm-cicd\\common\\config"){
                
                input "proceed???"
                plMap.host = sh(returnStdout: true, script: "cat db_info.json | jq -r .${plMap.instance}.\\\"HOST\\\"").trim()
                plMap.PATH = sh(returnStdout: true, script: "cat db_info.json | jq -r .${plMap.instance}.\\\"DB_PATH\\\"").trim()
                plMap.USER_PASSWORD = sh(returnStdout: true, script: "cat db_info.json | jq -r .${plMap.instance}.\\\"DB_USER_NAME_PASSWORD\\\"").trim()
                println "host::${plMap.host}"
                println "path::${plMap.PATH}"
                println "user: ${plMap.USER_PASSWORD}"
                plMap.commonProperties = readProperties file: "shared.properties";
                println plMap.commonProperties
                plMap.emailToList    =  "${plMap.commonProperties.EMAIL_TO_DEVOPS}";
                input "proceed???"
            }
            dir("imm-database\\deployment"){
            sh "ls -ltra"
            sh "mv inputFile.csv ${plMap.file}.csv" 
            sh "ls -ltra"
            sh "scp ${plMap.file}.csv imm_cicddev@${plMap.host}:${plMap.PATH}";
            }
        }
        
        stage("BUILD PACKAGE"){
            sh """ssh -o "StrictHostKeyChecking no" imm_cicddev@${plMap.host} <<ENDSSH
                                            sudo su - applmgr
                                            . adpenv "${plMap.instance}"
                                            cd ${plMap.PATH}
                                            pwd
                                            xxmm_build.sh "${plMap.file}" "${plMap.component}" "${plMap.branchName}"
    
                                         """
               input "proceed??"                          

        }
        stage("INSTALL SCRIPT"){
            sh """ssh -o "StrictHostKeyChecking no" imm_cicddev@${plMap.host} <<ENDSSH
                                            sudo su - applmgr
                                            . adpenv "${plMap.instance}"
                                            cd ${plMap.PATH}
                                            pwd
                                            xxmm_install.sh "${plMap.file}"
                                            
                                            """
         input "proceed??"                                   
        }
        stage("Deploy SCRIPT"){
            sh """ssh -o "StrictHostKeyChecking no" imm_cicddev@${plMap.host} <<ENDSSH
                                            sudo su - applmgr
                                            . adpenv "${plMap.instance}"
                                            cd ${plMap.PATH}
                                            pwd
                                            cd "${plMap.file}"
                                            pwd
                                            sqlplus ${plMap.USER_PASSWORD}
                                            @"install_db_master.sql"
                                           
                                            """
            }
              
        }catch(ex){
            throw ex;
        }
    finally{
        def emailFile = load "imm-cicd/common/utility-scripts/email.groovy";
	    println "Sending email to : ${plMap.emailToList}";
		//emailFile.sendEmail(plMap);
        to: plMap.emailToList
	    deleteDir();
     
        }
}
